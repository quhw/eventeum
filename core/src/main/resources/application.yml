server:
  tomcat:
    uri-encoding: UTF-8
  port: 8060

logging:
  level:
    org.springframework.web: ERROR
    net.consensys: DEBUG
    net.consensys.configs: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
  file: /logs/application.log

ethereum:
  nodes:
    - name: default
      url: http://localhost:8545
      pollingInterval: ${POLLING_INTERVAL:10000}

  healthcheck:
    pollInterval: 2000

#eventFilters:
#  - id: RequestCreated
#    contractAddress: ${CONTRACT_ADDRESS:0x4aecf261541f168bb3ca65fa8ff5012498aac3b8}
#    eventSpecification:
#      eventName: RequestCreated
#      indexedParameterDefinitions:
#        - position: 0
#          type: BYTES32
#        - position: 1
#          type: ADDRESS
#      nonIndexedParameterDefinitions:
#        - position: 2
#          type: BYTES32
#    correlationId:
#      type: NON_INDEXED_PARAMETER
#      index: 0

#transactionFilters:
#- nodeName: ${ETHEREUM_NETWORK:default}
#  type: "FROM_ADDRESS"
#  transactionIdentifierValue: ${CONTRACT_ADDRESS_EM_TOKEN:0x0f8E7A681019Ec13EfE853a6Eca666E05b214Fd5}
#  statuses: ['CONFIRMED']
#- nodeName: ${ETHEREUM_NETWORK:default}
#  type: "TO_ADDRESS"
#  transactionIdentifierValue: ${CONTRACT_ADDRESS_EM_TOKEN:0xfBAB8dE62002c86986C6e070BD3bB46BF983C74e}
#  statuses: ['FAILED']


eventStore:
  type: DB
  url: http://localhost:8081/api/rest/v1
  eventPath: /event
database:
  type: MONGO
#  type: SQL

spring:
  # docker run -d --name sql_server_demo -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=reallyStrongPwd123' -p 1433:1433 microsoft/mssql-server-linux
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/eventeum
    username: root
    password: root
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        dialect.storage_engine: innodb
        #see: https://stackoverflow.com/questions/36583185/spring-data-jpa-could-not-initialize-proxy-no-session-with-methods-marke
        enable_lazy_load_no_trans: true
        # Hibernate ddl auto (create, create-drop, validate, update)
    hibernate:
      ddl-auto: update
#     jdbc:
#       lob:
#         # For postgres, see: https://github.com/pgjdbc/pgjdbc/issues/1102
#         non_contextual_creation: true

broadcaster:
  type: ROCKETMQ
  cache:
    expirationMillis: 6000000
  event:
    confirmation:
      numBlocksToWait: 12
      numBlocksToWaitForMissingTx: 100
      numBlocksToWaitBeforeInvalidating: 2
  multiInstance: false
  bytesToAscii: false

# For Kafka
zookeeper:
  address: ${ZOOKEEPER_ADDRESS:localhost:2181}
kafka:
  bootstrap:
    addresses: ${KAFKA_ADDRESSES:localhost:9092}
  topic:
    contractEvents: contract-events
    blockEvents: block-events
    eventeumEvents: eventeum-events
  request:
    timeout:
      msConfig: ${KAFKA_REQUEST_TIMEOUT_MS:20000}
  retry:
    backoff:
      msConfig: ${KAFKA_RETRY_BACKOFF_MS:500}
  endpoint:
    identification:
      algorithm: ${KAFKA_ENDPOINT_IDENTIFICATION_ALGORITHM:null}
  sasl:
    mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
    username: ${KAFKA_USERNAME:""}
    password: ${KAFKA_PASSWORD:""}
  security:
    protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
  retries: ${KAFKA_RETRIES:10}

rocket:
  name:
    addresses: ${ROCKETMQ_ADDRESSES:127.0.0.1:9876}
  topic:
    contractEvents: contract-events
    blockEvents: block-events
    eventeumEvents: eventeum-events
    transactionEvents: transaction-events
  groupId: eventeum_1
